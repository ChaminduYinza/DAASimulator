
import java.awt.Color;
import java.util.Arrays;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Y`inza //Chamindu
 */
public class Simulator extends javax.swing.JFrame implements Runnable {

    /**
     * Creates new form NewJFrame
     */
    Thread Y;
    JButton[] num_array;
    int[] A;

    String execution;

    public Simulator() {
        initComponents();
        this.addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosing(java.awt.event.WindowEvent windowEvent) {
                if (JOptionPane.showConfirmDialog(null,
                        "Do you want to exit ?", "Exit?",
                        JOptionPane.YES_NO_OPTION,
                        JOptionPane.QUESTION_MESSAGE) == JOptionPane.YES_OPTION) {
                    System.exit(0);
                }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txt_1 = new javax.swing.JTextField();
        txt_2 = new javax.swing.JTextField();
        txt_3 = new javax.swing.JTextField();
        txt_4 = new javax.swing.JTextField();
        txt_5 = new javax.swing.JTextField();
        txt_6 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        btn_1 = new javax.swing.JButton();
        btn_3 = new javax.swing.JButton();
        btn_2 = new javax.swing.JButton();
        btn_5 = new javax.swing.JButton();
        btn_4 = new javax.swing.JButton();
        btn_6 = new javax.swing.JButton();
        btn_insert = new javax.swing.JButton();
        btn_bubble = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        btn_insertCode = new javax.swing.JButton();
        btn_bubbleCode = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txt_1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        getContentPane().add(txt_1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 139, 61, 62));

        txt_2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        getContentPane().add(txt_2, new org.netbeans.lib.awtextra.AbsoluteConstraints(77, 139, 61, 62));

        txt_3.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        getContentPane().add(txt_3, new org.netbeans.lib.awtextra.AbsoluteConstraints(144, 139, 61, 62));

        txt_4.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        getContentPane().add(txt_4, new org.netbeans.lib.awtextra.AbsoluteConstraints(211, 139, 61, 62));

        txt_5.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        getContentPane().add(txt_5, new org.netbeans.lib.awtextra.AbsoluteConstraints(278, 139, 61, 62));

        txt_6.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        getContentPane().add(txt_6, new org.netbeans.lib.awtextra.AbsoluteConstraints(345, 139, 61, 62));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel1.setText("    1         2         3         4         5         6 ");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 103, 396, -1));

        btn_1.setBackground(new java.awt.Color(255, 255, 255));
        btn_1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N

        btn_3.setBackground(new java.awt.Color(255, 255, 255));
        btn_3.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N

        btn_2.setBackground(new java.awt.Color(255, 255, 255));
        btn_2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N

        btn_5.setBackground(new java.awt.Color(255, 255, 255));
        btn_5.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N

        btn_4.setBackground(new java.awt.Color(255, 255, 255));
        btn_4.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N

        btn_6.setBackground(new java.awt.Color(255, 255, 255));
        btn_6.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N

        btn_insert.setText("Insertion Sort");
        btn_insert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_insertActionPerformed(evt);
            }
        });

        btn_bubble.setText("Bubble Sort");
        btn_bubble.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_bubbleActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(btn_bubble, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_insert, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btn_1, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_2, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_3, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_4, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_5, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_6, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_1, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_2, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_3, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_4, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_5, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_6, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btn_insert, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_bubble, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(62, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 212, -1, -1));

        jLabel2.setFont(new java.awt.Font("Trajan Pro", 1, 24)); // NOI18N
        jLabel2.setText("DAA ALGORITHM SIMULATOR 2016");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(161, 11, 476, 51));

        btn_insertCode.setText("Insertion Sort");
        btn_insertCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_insertCodeActionPerformed(evt);
            }
        });
        getContentPane().add(btn_insertCode, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 110, 148, -1));

        btn_bubbleCode.setText("Bubble Sort");
        btn_bubbleCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_bubbleCodeActionPerformed(evt);
            }
        });
        getContentPane().add(btn_bubbleCode, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 110, 146, -1));

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel3.setText("IT15000118 L.L.C.T. Alwis");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 480, 170, -1));

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jTextArea1.setRows(5);
        jScrollPane3.setViewportView(jTextArea1);

        getContentPane().add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 140, 330, 300));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 10, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 380, 10, -1));

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel4.setText("View Pseudocode Code");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 80, 162, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btn_insertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_insertActionPerformed
        if (Validation()) {
            setDisable();
            A = new int[6];
            execution = "Insert";
            Y = new Thread(this);
            A[0] = Integer.parseInt(txt_1.getText());
            A[1] = Integer.parseInt(txt_2.getText());
            A[2] = Integer.parseInt(txt_3.getText());
            A[3] = Integer.parseInt(txt_4.getText());
            A[4] = Integer.parseInt(txt_5.getText());
            A[5] = Integer.parseInt(txt_6.getText());

            btn_1.setText(txt_1.getText());
            btn_2.setText(txt_2.getText());
            btn_3.setText(txt_3.getText());
            btn_4.setText(txt_4.getText());
            btn_5.setText(txt_5.getText());
            btn_6.setText(txt_6.getText());
            jTextArea1.setText("");
            num_array = new JButton[]{btn_1, btn_2, btn_3, btn_4, btn_5, btn_6};
            Y.start();
        }


    }//GEN-LAST:event_btn_insertActionPerformed

    private void btn_bubbleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_bubbleActionPerformed

        if (Validation()) {
        }
        setDisable();
        jTextArea1.setText("");
        btn_bubble.setEnabled(false);
        btn_insert.setEnabled(false);
        btn_insertCode.setEnabled(false);
        btn_bubbleCode.setEnabled(false);

        A = new int[6];
        execution = "Bubble";
        Y = new Thread(this);
        A[0] = Integer.parseInt(txt_1.getText());
        A[1] = Integer.parseInt(txt_2.getText());
        A[2] = Integer.parseInt(txt_3.getText());
        A[3] = Integer.parseInt(txt_4.getText());
        A[4] = Integer.parseInt(txt_5.getText());
        A[5] = Integer.parseInt(txt_6.getText());

        btn_1.setText(txt_1.getText());
        btn_2.setText(txt_2.getText());
        btn_3.setText(txt_3.getText());
        btn_4.setText(txt_4.getText());
        btn_5.setText(txt_5.getText());
        btn_6.setText(txt_6.getText());

        num_array = new JButton[]{btn_1, btn_2, btn_3, btn_4, btn_5, btn_6};
        Y.start();

    }//GEN-LAST:event_btn_bubbleActionPerformed

    private void btn_insertCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_insertCodeActionPerformed
        jTextArea1.setText("for i <- 2 to n"
                + "\n       key <- A[i]"
                + "\n       j <- i"
                + "\n       while(j > 1) AND (A[j-1] > key) do"
                + "\n            A[j] <- A[j-1]"
                + "\n            j <- j-1"
                + "\n       A[j] <- key");


    }//GEN-LAST:event_btn_insertCodeActionPerformed

    private void btn_bubbleCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_bubbleCodeActionPerformed
        jTextArea1.setText("for i <- to lenght[A] \n"
                + "   do for j <- length[A] to j+1"
                + "\n     do if A[j-1] > A[j]\n"
                + "          then exchange A[j] <-> A[j-1]");

    }//GEN-LAST:event_btn_bubbleCodeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Simulator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Simulator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Simulator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Simulator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Simulator().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_1;
    private javax.swing.JButton btn_2;
    private javax.swing.JButton btn_3;
    private javax.swing.JButton btn_4;
    private javax.swing.JButton btn_5;
    private javax.swing.JButton btn_6;
    private javax.swing.JButton btn_bubble;
    private javax.swing.JButton btn_bubbleCode;
    private javax.swing.JButton btn_insert;
    private javax.swing.JButton btn_insertCode;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField txt_1;
    private javax.swing.JTextField txt_2;
    private javax.swing.JTextField txt_3;
    private javax.swing.JTextField txt_4;
    private javax.swing.JTextField txt_5;
    private javax.swing.JTextField txt_6;
    // End of variables declaration//GEN-END:variables

    @Override
    public void run() {
        if ("Insert".equals(execution)) {
            int i, j, key;
            int count = 1;
            for (i = 1; i < A.length; i++) {
                key = A[i];
                j = i;
                if (j > 0 && A[j - 1] <= key) {
                    try {
                        textUP(j);
                    } catch (InterruptedException ex) {
                    }
                }
                while (j > 0 && A[j - 1] > key) {
                    try {
                        int K = A[j];
                        int B = A[j - 1];
                        textUP(j);
                        num_array[j].setBackground(Color.red);
                        num_array[j - 1].setBackground(Color.red);
                        A[j] = A[j - 1];
                        A[j - 1] = K;
                        j--;
                        int TT = swapArray(j, j + 1, K, B);
                    } catch (InterruptedException ex) {
                    }
                }
                A[j] = key;
                jTextArea1.append("( " + count + " ) " + (Arrays.toString(A)) + "\n");
                count++;
            }
            Y.interrupt();
            setEnable();
            for (int m = 0; m <= 5; m++) {
                num_array[m].setBackground(Color.white);
            }
        }
//////////////////////////////////BUBLE SORT////////////////////////////////////////////////

        if ("Bubble".equals(execution)) {

            int count = 1;
            int temp;
            for (int i = 0; i < A.length; i++) {
                for (int j = 1; j < (A.length - i); j++) {
                    try {
                        textUP(j);
                    } catch (InterruptedException ex) {
                    }
                    if (A[j - 1] > A[j]) {
                        int K = A[j];
                        int B = A[j - 1];
                        num_array[j].setBackground(Color.red);
                        num_array[j - 1].setBackground(Color.red);
                        try {
                            swapArray(j, j - 1, B, K);
                        } catch (InterruptedException ex) {
                        }
                        temp = A[j - 1];
                        A[j - 1] = A[j];
                        A[j] = temp;
                        num_array[j].setBackground(Color.white);
                        num_array[j - 1].setBackground(Color.white);
                    }
                }
                jTextArea1.append("( " + count + " ) " + (Arrays.toString(A)) + "\n");
                count++;
            }
            setEnable();
            Y.interrupt();
        }
    }

    public int swapArray(int num1, int num2, int num3, int num4) throws InterruptedException {
        if ("Insert".equals(execution)) {
            Y.sleep(2000);
            num_array[num1].setText(Integer.toString(num3));
            num_array[num1].setBackground(Color.yellow);
            num_array[num2].setBackground(Color.white);
            num_array[num2].setText(Integer.toString(num4));
            Y.sleep(1000);
            num_array[num1].setBackground(Color.white);
        }
        if ("Bubble".equals(execution)) {
            Y.sleep(2000);
            num_array[num1].setText(Integer.toString(num3));
            num_array[num2].setBackground(Color.yellow);
            num_array[num1].setBackground(Color.white);
            num_array[num2].setText(Integer.toString(num4));
            Y.sleep(1000);
            num_array[num2].setBackground(Color.white);
            // Y.join();
        }
        return 99;
    }

    public void textUP(int num1) throws InterruptedException {
        for (int i = 0; i < 30; i++) {
            num_array[num1].setLocation(num_array[num1].getX(), num_array[num1].getY() - 2);
            num_array[num1].setBackground(Color.cyan);
            Y.sleep(30);
        }
        for (int i = 0; i < 30; i++) {
            num_array[num1].setLocation(num_array[num1].getX(), num_array[num1].getY() + 2);
            num_array[num1].setBackground(Color.cyan);
            Y.sleep(30);
        }
        num_array[num1].setBackground(Color.WHITE);
    }

    public void setDisable() {
        btn_bubble.setEnabled(false);
        btn_insert.setEnabled(false);
        btn_insertCode.setEnabled(false);
        btn_bubbleCode.setEnabled(false);
        txt_1.setEditable(false);
        txt_2.setEditable(false);
        txt_3.setEditable(false);
        txt_4.setEditable(false);
        txt_5.setEditable(false);
        txt_6.setEditable(false);
        jTextArea1.setVisible(true);

    }

    public void setEnable() {
        btn_bubble.setEnabled(true);
        btn_insert.setEnabled(true);
        btn_insertCode.setEnabled(true);
        btn_bubbleCode.setEnabled(true);
        txt_1.setEditable(true);
        txt_2.setEditable(true);
        txt_3.setEditable(true);
        txt_4.setEditable(true);
        txt_5.setEditable(true);
        txt_6.setEditable(true);

    }

    public boolean Validation() {
        boolean statement = true;
        if (txt_1.getText().length() > 0 && txt_1.getText().length() > 0 && txt_2.getText().length() > 0 
                && txt_3.getText().length() > 0 && txt_4.getText().length() > 0 
                && txt_5.getText().length() > 0 && txt_6.getText().length() > 0) {

            if (txt_1.getText().charAt(0) == '-' && txt_1.getText().length() >= 2) {
                for (int i = 1; i < txt_1.getText().length(); i++) {

                    if (Character.isDigit(txt_1.getText().charAt(i))) {

                    } else {
                        JOptionPane.showMessageDialog(null, "Fill the text boxes with digits", "Warning!", JOptionPane.ERROR_MESSAGE);
                        statement = false;
                        break;
                    }
                }

            } else {
                for (int i = 0; i < txt_1.getText().length(); i++) {

                    if (Character.isDigit(txt_1.getText().charAt(i))) {

                    } else {
                        JOptionPane.showMessageDialog(null, "Fill the text boxes with digits", "Warning!", JOptionPane.ERROR_MESSAGE);
                        statement = false;
                        break;
                    }
                }
            }

            if (txt_2.getText().charAt(0) == '-' && txt_2.getText().length() >= 2) {
                for (int i = 1; i < txt_2.getText().length(); i++) {

                    if (Character.isDigit(txt_2.getText().charAt(i))) {

                    } else {
                        JOptionPane.showMessageDialog(null, "Fill the text boxes with digits", "Warning!", JOptionPane.ERROR_MESSAGE);
                        statement = false;
                        break;
                    }
                }
            } else {
                for (int i = 0; i < txt_2.getText().length(); i++) {

                    if (Character.isDigit(txt_2.getText().charAt(i))) {

                    } else {
                        JOptionPane.showMessageDialog(null, "Fill the text boxes with digits", "Warning!", JOptionPane.ERROR_MESSAGE);
                        statement = false;
                        break;
                    }
                }
            }

            if (txt_3.getText().charAt(0) == '-' && txt_3.getText().length() >= 2) {
                for (int i = 1; i < txt_3.getText().length(); i++) {

                    if (Character.isDigit(txt_3.getText().charAt(i))) {

                    } else {
                        JOptionPane.showMessageDialog(null, "Fill the text boxes with digits", "Warning!", JOptionPane.ERROR_MESSAGE);
                        statement = false;
                        break;
                    }
                }
            } else {
                for (int i = 0; i < txt_3.getText().length(); i++) {

                    if (Character.isDigit(txt_3.getText().charAt(i))) {

                    } else {
                        JOptionPane.showMessageDialog(null, "Fill the text boxes with digits", "Warning!", JOptionPane.ERROR_MESSAGE);
                        statement = false;
                        break;
                    }
                }
            }

            if (txt_4.getText().charAt(0) == '-' && txt_4.getText().length() >= 2) {
                for (int i = 1; i < txt_4.getText().length(); i++) {

                    if (Character.isDigit(txt_4.getText().charAt(i))) {

                    } else {
                        JOptionPane.showMessageDialog(null, "Fill the text boxes with digits", "Warning!", JOptionPane.ERROR_MESSAGE);
                        statement = false;
                        break;
                    }
                }
            } else {
                for (int i = 0; i < txt_4.getText().length(); i++) {

                    if (Character.isDigit(txt_4.getText().charAt(i))) {

                    } else {
                        JOptionPane.showMessageDialog(null, "Fill the text boxes with digits", "Warning!", JOptionPane.ERROR_MESSAGE);
                        statement = false;
                        break;
                    }
                }
            }

            if (txt_5.getText().charAt(0) == '-' && txt_5.getText().length() >= 2) {
                for (int i = 1; i < txt_5.getText().length(); i++) {

                    if (Character.isDigit(txt_5.getText().charAt(i))) {

                    } else {
                        JOptionPane.showMessageDialog(null, "Fill the text boxes with digits", "Warning!", JOptionPane.ERROR_MESSAGE);
                        statement = false;
                        break;
                    }
                }
            } else {
                for (int i = 0; i < txt_5.getText().length(); i++) {

                    if (Character.isDigit(txt_5.getText().charAt(i))) {

                    } else {
                        JOptionPane.showMessageDialog(null, "Fill the text boxes with digits", "Warning!", JOptionPane.ERROR_MESSAGE);
                        statement = false;
                        break;
                    }
                }
            }

            if (txt_6.getText().charAt(0) == '-' && txt_6.getText().length() >= 2) {
                for (int i = 1; i < txt_6.getText().length(); i++) {

                    if (Character.isDigit(txt_6.getText().charAt(i))) {

                    } else {
                        JOptionPane.showMessageDialog(null, "Fill the text boxes with digits", "Warning!", JOptionPane.ERROR_MESSAGE);
                        statement = false;
                        break;
                    }
                }
            } else {
                for (int i = 0; i < txt_6.getText().length(); i++) {

                    if (Character.isDigit(txt_6.getText().charAt(i))) {

                    } else {
                        JOptionPane.showMessageDialog(null, "Fill the text boxes with digits", "Warning!", JOptionPane.ERROR_MESSAGE);
                        statement = false;
                        break;
                    }
                }
            }

        } else {
            JOptionPane.showMessageDialog(null, "Fill the text boxes with digits", "Warning!", JOptionPane.ERROR_MESSAGE);
            return false;
        }

        return statement;
    }
}
